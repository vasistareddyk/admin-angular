{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/azure/jquery-plugin.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/azure/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/azure/uploader.basic.js","../client/js/azure/azure.xhr.upload.handler.js","../client/js/azure/get-sas.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/azure/rest/delete-blob.js","../client/js/azure/rest/put-blob.js","../client/js/azure/rest/put-block.js","../client/js/azure/rest/put-block-list.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/azure/uploader.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","fineUploaderAzure","endpointType","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","newStr","nextIdxToReplace","strBefore","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_onDeleteComplete","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","max","toFixed","sizeSymbols","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","_onBeforeAutoRetry","autoAttemptDelay","itemLimit","onManualRetry","clearTimeout","storedItemIndex","expunge","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","errorMessage","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","hasMoreParts","remaining","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","inProgress","connectionManager","available","uploadChunk","clearCachedChunk","responseToReport","inProgressChunkIdx","_maybePersistChunkedState","inProgressIdx","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","free","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","stopReceivingMessages","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","receiveMessage","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","WindowReceiveMessage","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","azure","util","AZURE_PARAM_PREFIX","_paramNameMatchesAzureParameter","_getPrefixedParamName","getParamsAsHeaders","headerName","parseAzureError","codeTag","messageTag","domParser","DOMParser","responseDoc","parseFromString","errorTag","errorDetails","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","signature","blobProperties","minFileSize","_cannedBlobNames","getBlobName","onGetBlobName","_determineBlobName","deleteBlob","_deleteBlob","blobNameOptionValue","fileExtension","blobNameToUse","blobName","relatedToCancel","deleteBlobSasUri","blobUriStore","deleteFileEndpointStore","getSasSuccess","sasUri","getSasFailure","DeleteBlob","getSas","GetSas","restRequestVerb","combineChunks","getSignedUrl","mimeType","blockIdEntries","putBlockList","handleFailure","determineBlobUrl","containerUrl","getBlobNameSuccess","getBlobNameFailure","getSasId","getSasXhr","determineBlobUrlSuccess","blobUrl","getSasForPutBlobOrBlock","determineBlobUrlFailure","azureError","minFileSizeForChunking","getBlobMetadata","putBlob","PutBlob","putBlock","PutBlock","PutBlockList","blockIdEntry","chunkingData","maybePossible","sasResponseReceived","requestPromises","blobUri","requestPromise","restVerb","bloburi","handleSuccessResponse","parsedResponse","pendingRequests","responseJson","successIndicator","failureIndicator","codes","endpoints","promises","endpointHandler","Content-Type","createBlockId","partNum","digits","zeros","paddedPartNum","btoa","blockId","createRequestBody","doc","implementation","createDocument","latestEl","latestTextEl","createTextNode","XMLSerializer","serializeToString","fileMimeType","registerXhrCallback","blockIdsXml","x-ms-blob-content-type","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"azure.jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery*/\n/**\n * Simply an alias for the `fineUploader` plug-in wrapper, but hides the required `endpointType` option from the\n * integrator.  I thought it may be confusing to convey to the integrator that, when using Fine Uploader in Azure mode,\n * you need to specify an `endpointType` with a value of \"azure\", and perhaps an `uploaderType` with a value of \"basic\" if\n * you want to use basic mode when uploading directly to Azure as well.  So, you can use this plug-in alias and not worry\n * about the `endpointType` option at all.\n */\n(function($) {\n    \"use strict\";\n\n    $.fn.fineUploaderAzure = function(optionsOrCommand) {\n        if (typeof optionsOrCommand === \"object\") {\n\n            // This option is used to tell the plug-in wrapper to instantiate the appropriate Azure-namespace modules.\n            optionsOrCommand.endpointType = \"azure\";\n        }\n\n        return $.fn.fineUploader.apply(this, arguments);\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.11.5\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var id = this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL\n            });\n\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n            if (sessionData.thumbnailUrl) {\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\n            }\n\n            this._netUploaded++;\n            this._netUploadedOrQueued++;\n\n            return id;\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        self._options.callbacks.onUpload(id, name);\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Retrying \" + name + \"...\");\n                    self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, self._options.retry.autoAttemptDelay * 1000);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n                this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n                // For error reporting, we only have access to the response status if this is not\n                // an `XDomainRequest`.\n                if (xhrOrXdr.withCredentials === undefined) {\n                    this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n                }\n                else {\n                    this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n                }\n            }\n            else {\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                params: {},\n                paramsInBody: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                }\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                handler.uploadChunk(id, chunkIdx, resuming).then(\n                    // upload chunk success\n                    function success(response, xhr) {\n                        log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                        handler.clearCachedChunk(id, chunkIdx);\n\n                        var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                            responseToReport = upload.normalizeResponse(response, true),\n                            inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                        log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                        chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                        if (inProgressChunkIdx >= 0) {\n                            inProgressChunks.splice(inProgressChunkIdx, 1);\n                        }\n\n                        handler._maybePersistChunkedState(id);\n\n                        if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                            chunked.finalize(id);\n                        }\n                        else if (chunked.hasMoreParts(id)) {\n                            chunked.sendNext(id);\n                        }\n                        else {\n                            log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                        }\n                    },\n\n                    // upload chunk failure\n                    function failure(response, xhr) {\n                        log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n                        handler.clearCachedChunk(id, chunkIdx);\n\n                        var responseToReport = upload.normalizeResponse(response, false),\n                            inProgressIdx;\n\n                        if (responseToReport.reset) {\n                            chunked.reset(id);\n                        }\n                        else {\n                            inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                            if (inProgressIdx >= 0) {\n                                handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                                handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                            }\n                        }\n\n                        // We may have aborted all other in-progress chunks for this file due to a failure.\n                        // If so, ignore the failures associated with those aborts.\n                        if (!handler._getFileState(id).temp.ignoreFailure) {\n                            // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                            // chunks since they will be explicitly aborted\n                            if (concurrentChunkingPossible) {\n                                handler._getFileState(id).temp.ignoreFailure = true;\n\n                                log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                                qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                                    log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                                    ckXhr.abort();\n                                    // Flag the transport, in case we are waiting for some other async operation\n                                    // to complete before attempting to upload the chunk\n                                    ckXhr._cancelled = true;\n                                });\n\n                                // We must indicate that all aborted chunks are no longer in progress\n                                handler.moveInProgressToRemaining(id);\n\n                                // Free up any connections used by these chunks, but don't allow any\n                                // other files to take up the connections (until we have exhausted all auto-retries)\n                                connectionManager.free(id, true);\n                            }\n\n                            if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                                // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                                // if a chunk succeeds immediately after one fails before we have determined if the upload\n                                // is a failure or not.\n                                upload.cleanup(id, responseToReport, xhr);\n                            }\n                        }\n                    }\n                )\n                    .done(function() {\n                        handler.clearXhr(id, chunkIdx);\n                    });\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name);\n\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                chunked.sendNext(id);\n            }\n            else {\n                simple.send(id, name);\n            }\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq */\nqq.azure = qq.azure || {};\nqq.azure.util = qq.azure.util || (function() {\n    \"use strict\";\n\n    return {\n        AZURE_PARAM_PREFIX: \"x-ms-meta-\",\n\n        /** Test if a request header is actually a known Azure parameter. See: https://msdn.microsoft.com/en-us/library/azure/dd179451.aspx\n         *\n         * @param name Name of the Request Header parameter.\n         * @returns {Boolean} Test result.\n         */\n        _paramNameMatchesAzureParameter: function(name) {\n            switch (name) {\n                case \"Cache-Control\":\n                case \"Content-Disposition\":\n                case \"Content-Encoding\":\n                case \"Content-MD5\":\n                case \"x-ms-blob-content-encoding\":\n                case \"x-ms-blob-content-disposition\":\n                case \"x-ms-blob-content-md5\":\n                case \"x-ms-blob-cache-control\":\n                    return true;\n                default:\n                    return false;\n            }\n        },\n\n        /** Create Prefixed request headers which are appropriate for Azure.\n         *\n         * If the request header is appropriate for Azure (e.g. Cache-Control) then it should be\n         * passed along without a metadata prefix. For all other request header parameter names,\n         * qq.azure.util.AZURE_PARAM_PREFIX should be prepended.\n         *\n         * @param name Name of the Request Header parameter to construct a (possibly) prefixed name.\n         * @returns {String} A valid Request Header parameter name.\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                return name;\n            }\n            else {\n                return qq.azure.util.AZURE_PARAM_PREFIX + name;\n            }\n        },\n\n        getParamsAsHeaders: function(params) {\n            var headers = {};\n\n            qq.each(params, function(name, val) {\n                var headerName = qq.azure.util._getPrefixedParamName(name),\n                    value = null;\n\n                if (qq.isFunction(val)) {\n                    value = String(val());\n                }\n                else if (qq.isObject(val)) {\n                    qq.extend(headers, qq.azure.util.getParamsAsHeaders(val));\n                }\n                else {\n                    value = String(val);\n                }\n\n                if (value !== null) {\n                    if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                        headers[headerName] = value;\n                    } else {\n                        headers[headerName] = encodeURIComponent(value);\n                    }\n                }\n            });\n\n            return headers;\n        },\n\n        parseAzureError: function(responseText, log) {\n            var domParser = new DOMParser(),\n                responseDoc = domParser.parseFromString(responseText, \"application/xml\"),\n                errorTag = responseDoc.getElementsByTagName(\"Error\")[0],\n                errorDetails = {},\n                codeTag, messageTag;\n\n            log(\"Received error response: \" + responseText, \"error\");\n\n            if (errorTag) {\n                messageTag = errorTag.getElementsByTagName(\"Message\")[0];\n                if (messageTag) {\n                    errorDetails.message = messageTag.textContent;\n                }\n\n                codeTag = errorTag.getElementsByTagName(\"Code\")[0];\n                if (codeTag) {\n                    errorDetails.code = codeTag.textContent;\n                }\n\n                log(\"Parsed Azure error: \" + JSON.stringify(errorDetails), \"error\");\n\n                return errorDetails;\n            }\n        }\n    };\n}());\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to Azure.\n * Some inherited options and API methods have a special meaning in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploaderBasic = function(o) {\n        if (!qq.supportedFeatures.ajaxUploading) {\n            throw new qq.Error(\"Uploading directly to Azure is not possible in this browser.\");\n        }\n\n        var options = {\n            signature: {\n                endpoint: null,\n\n                customHeaders: {}\n            },\n\n            // 'uuid', 'filename', or a function which may be promissory\n            blobProperties: {\n                name: \"uuid\"\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            chunking: {\n                // If this is increased, Azure may respond with a 413\n                partSize: 4000000,\n                // Don't chunk files less than this size\n                minFileSize: 4000001\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds blob names for file representations constructed from a session request.\n        this._cannedBlobNames = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, {\n        getBlobName: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedBlobNames[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n            return this._cannedBlobNames[id];\n        },\n\n        _getEndpointSpecificParams: function(id) {\n            return {\n                blob: this.getBlobName(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                container: this._endpointStore.get(id)\n            };\n        },\n\n        _createUploadHandler: function() {\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this,\n                {\n                    signature: this._options.signature,\n                    onGetBlobName: qq.bind(this._determineBlobName, this),\n                    deleteBlob: qq.bind(this._deleteBlob, this, true)\n                },\n                \"azure\");\n        },\n\n        _determineBlobName: function(id) {\n            var self = this,\n                blobNameOptionValue = this._options.blobProperties.name,\n                uuid = this.getUuid(id),\n                filename = this.getName(id),\n                fileExtension = qq.getExtension(filename),\n                blobNameToUse = uuid;\n\n            if (qq.isString(blobNameOptionValue)) {\n                switch (blobNameOptionValue) {\n                    case \"uuid\":\n                        if (fileExtension !== undefined) {\n                            blobNameToUse += \".\" + fileExtension;\n                        }\n                        return new qq.Promise().success(blobNameToUse);\n                    case \"filename\":\n                        return new qq.Promise().success(filename);\n                    default:\n                        return new qq.Promise.failure(\"Invalid blobName option value - \" + blobNameOptionValue);\n                }\n            }\n            else {\n                return blobNameOptionValue.call(this, id);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.blobName == null) {\n                throw new qq.Error(\"Did not find blob name property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedBlobNames[id] = sessionData.blobName;\n            }\n\n            return id;\n        },\n\n        _deleteBlob: function(relatedToCancel, id) {\n            var self = this,\n                deleteBlobSasUri = {},\n                blobUriStore = {\n                    get: function(id) {\n                        return self._endpointStore.get(id) + \"/\" + self.getBlobName(id);\n                    }\n                },\n                deleteFileEndpointStore = {\n                    get: function(id) {\n                        return deleteBlobSasUri[id];\n                    }\n                },\n                getSasSuccess = function(id, sasUri) {\n                    deleteBlobSasUri[id] = sasUri;\n                    deleteBlob.send(id);\n                },\n                getSasFailure = function(id, reason, xhr) {\n                    if (relatedToCancel) {\n                        self.log(\"Will cancel upload, but cannot remove uncommitted parts from Azure due to issue retrieving SAS\", \"error\");\n                        qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                    }\n                    else {\n                        self._onDeleteComplete(id, xhr, true);\n                        self._options.callbacks.onDeleteComplete(id, xhr, true);\n                    }\n                },\n                deleteBlob = new qq.azure.DeleteBlob({\n                    endpointStore: deleteFileEndpointStore,\n                    log: qq.bind(self.log, self),\n                    onDelete: function(id) {\n                        self._onDelete(id);\n                        self._options.callbacks.onDelete(id);\n                    },\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {\n                        delete deleteBlobSasUri[id];\n\n                        if (isError) {\n                            if (relatedToCancel) {\n                                self.log(\"Will cancel upload, but failed to remove uncommitted parts from Azure.\", \"error\");\n                            }\n                            else {\n                                qq.azure.util.parseAzureError(xhrOrXdr.responseText, qq.bind(self.log, self));\n                            }\n                        }\n\n                        if (relatedToCancel) {\n                            qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                            self.log(\"Deleted uncommitted blob chunks for \" + id);\n                        }\n                        else {\n                            self._onDeleteComplete(id, xhrOrXdr, isError);\n                            self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                        }\n                    }\n                }),\n                getSas = new qq.azure.GetSas({\n                    cors: this._options.cors,\n                    endpointStore: {\n                        get: function() {\n                            return self._options.signature.endpoint;\n                        }\n                    },\n                    restRequestVerb: deleteBlob.method,\n                    log: qq.bind(self.log, self)\n                });\n\n            getSas.request(id, blobUriStore.get(id)).then(\n                qq.bind(getSasSuccess, self, id),\n                qq.bind(getSasFailure, self, id));\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return {\n                sendDelete: function(id, uuid) {\n                    self._deleteBlob(false, id);\n                }\n            };\n        }\n    });\n}());\n","/*globals qq */\n/**\n * Upload handler used by the upload to Azure module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to Azure Blob Storage containers via the\n * associated Azure API.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\n// TODO l18n for error messages returned to UI\nqq.azure.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        log = proxy.log,\n        cors = spec.cors,\n        endpointStore = spec.endpointStore,\n        paramsStore = spec.paramsStore,\n        signature = spec.signature,\n        filenameParam = spec.filenameParam,\n        minFileSizeForChunking = spec.chunking.minFileSize,\n        deleteBlob = spec.deleteBlob,\n        onGetBlobName = spec.onGetBlobName,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n\n        getBlobMetadata = function(id) {\n            var params = paramsStore.get(id);\n            params[filenameParam] = getName(id);\n            return params;\n        },\n\n        api = {\n            putBlob: new qq.azure.PutBlob({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            putBlock: new qq.azure.PutBlock({\n                log: log\n            }),\n\n            putBlockList: new qq.azure.PutBlockList({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            getSasForPutBlobOrBlock: new qq.azure.GetSas({\n                cors: cors,\n                customHeaders: signature.customHeaders,\n                endpointStore: {\n                    get: function() {\n                        return signature.endpoint;\n                    }\n                },\n                log: log,\n                restRequestVerb: \"PUT\"\n            })\n        };\n\n    function combineChunks(id) {\n        var promise = new qq.Promise();\n\n        getSignedUrl(id).then(function(sasUri) {\n            var mimeType = handler._getMimeType(id),\n                blockIdEntries = handler._getPersistableData(id).blockIdEntries;\n\n            api.putBlockList.send(id, sasUri, blockIdEntries, mimeType, function(xhr) {\n                handler._registerXhr(id, null, xhr, api.putBlockList);\n            })\n                .then(function(xhr) {\n                    log(\"Success combining chunks for id \" + id);\n                    promise.success({}, xhr);\n                }, function(xhr) {\n                    log(\"Attempt to combine chunks failed for id \" + id, \"error\");\n                    handleFailure(xhr, promise);\n                });\n\n        },\n        promise.failure);\n\n        return promise;\n    }\n\n    function determineBlobUrl(id) {\n        var containerUrl = endpointStore.get(id),\n            promise = new qq.Promise(),\n            getBlobNameSuccess = function(blobName) {\n                handler._setThirdPartyFileId(id, blobName);\n                promise.success(containerUrl + \"/\" + blobName);\n            },\n            getBlobNameFailure = function(reason) {\n                promise.failure(reason);\n            };\n\n        onGetBlobName(id).then(getBlobNameSuccess, getBlobNameFailure);\n\n        return promise;\n    }\n\n    function getSignedUrl(id, optChunkIdx) {\n        // We may have multiple SAS requests in progress for the same file, so we must include the chunk idx\n        // as part of the ID when communicating with the SAS ajax requester to avoid collisions.\n        var getSasId = optChunkIdx == null ? id : id + \".\" + optChunkIdx,\n\n            promise = new qq.Promise(),\n            getSasSuccess = function(sasUri) {\n                log(\"GET SAS request succeeded.\");\n                promise.success(sasUri);\n            },\n            getSasFailure = function(reason, getSasXhr) {\n                log(\"GET SAS request failed: \" + reason, \"error\");\n                promise.failure({error: \"Problem communicating with local server\"}, getSasXhr);\n            },\n            determineBlobUrlSuccess = function(blobUrl) {\n                api.getSasForPutBlobOrBlock.request(getSasId, blobUrl).then(\n                    getSasSuccess,\n                    getSasFailure\n                );\n            },\n            determineBlobUrlFailure = function(reason) {\n                log(qq.format(\"Failed to determine blob name for ID {} - {}\", id, reason), \"error\");\n                promise.failure({error: reason});\n            };\n\n        determineBlobUrl(id).then(determineBlobUrlSuccess, determineBlobUrlFailure);\n\n        return promise;\n    }\n\n    function handleFailure(xhr, promise) {\n        var azureError = qq.azure.util.parseAzureError(xhr.responseText, log),\n            errorMsg = \"Problem sending file to Azure\";\n\n        promise.failure({error: errorMsg,\n            azureError: azureError && azureError.message,\n            reset: xhr.status === 403\n        });\n    }\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx) {\n            var promise = new qq.Promise();\n\n            getSignedUrl(id, chunkIdx).then(\n                function(sasUri) {\n                    var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx);\n\n                    handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                    handler._registerXhr(id, chunkIdx, xhr, api.putBlock);\n\n                    // We may have multiple put block requests in progress for the same file, so we must include the chunk idx\n                    // as part of the ID when communicating with the put block ajax requester to avoid collisions.\n                    api.putBlock.upload(id + \".\" + chunkIdx, xhr, sasUri, chunkIdx, chunkData.blob).then(\n                        function(blockIdEntry) {\n                            if (!handler._getPersistableData(id).blockIdEntries) {\n                                handler._getPersistableData(id).blockIdEntries = [];\n                            }\n\n                            handler._getPersistableData(id).blockIdEntries.push(blockIdEntry);\n                            log(\"Put Block call succeeded for \" + id);\n                            promise.success({}, xhr);\n                        },\n                        function() {\n                            log(qq.format(\"Put Block call failed for ID {} on part {}\", id, chunkIdx), \"error\");\n                            handleFailure(xhr, promise);\n                        }\n                    );\n                },\n                promise.failure\n            );\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var promise = new qq.Promise(),\n                fileOrBlob = handler.getFile(id);\n\n            getSignedUrl(id).then(function(sasUri) {\n                var xhr = handler._createXhr(id);\n\n                handler._registerProgressHandler(id);\n\n                api.putBlob.upload(id, xhr, sasUri, fileOrBlob).then(\n                    function() {\n                        log(\"Put Blob call succeeded for \" + id);\n                        promise.success({}, xhr);\n                    },\n                    function() {\n                        log(\"Put Blob call failed for \" + id, \"error\");\n                        handleFailure(xhr, promise);\n                    }\n                );\n            },\n            promise.failure);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this,\n        new qq.XhrUploadHandler({\n            options: qq.extend({namespace: \"azure\"}, spec),\n            proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n        }\n    ));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var relatedToCancel = handler._wasCanceled(id),\n                    chunkingData = handler._getPersistableData(id),\n                    blockIdEntries = (chunkingData && chunkingData.blockIdEntries) || [];\n\n                if (relatedToCancel && blockIdEntries.length > 0) {\n                    deleteBlob(id);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return combineChunks(id);\n            },\n\n            _shouldChunkThisFile: function(id) {\n                var maybePossible = super_._shouldChunkThisFile(id);\n                return maybePossible && getSize(id) >= minFileSizeForChunking;\n            }\n        };\n    });\n};\n","/* globals qq */\n/**\n * Sends a GET request to the integrator's server, which should return a Shared Access Signature URI used to\n * make a specific request on a Blob via the Azure REST API.\n */\nqq.azure.GetSas = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            customHeaders: {},\n            restRequestVerb: \"PUT\",\n            endpointStore: null,\n            log: function(str, level) {}\n        },\n        requestPromises = {};\n\n    qq.extend(options, o);\n\n    function sasResponseReceived(id, xhr, isError) {\n        var promise = requestPromises[id];\n\n        if (isError) {\n            promise.failure(\"Received response code \" + xhr.status, xhr);\n        }\n        else {\n            if (xhr.responseText.length) {\n                promise.success(xhr.responseText);\n            }\n            else {\n                promise.failure(\"Empty response.\", xhr);\n            }\n        }\n\n        delete requestPromises[id];\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        successfulResponseCodes: {\n            GET: [200]\n        },\n        contentType: null,\n        customHeaders: options.customHeaders,\n        endpointStore: options.endpointStore,\n        cors: options.cors,\n        log: options.log,\n        onComplete: sasResponseReceived\n    }));\n\n    qq.extend(this, {\n        request: function(id, blobUri) {\n            var requestPromise = new qq.Promise(),\n                restVerb = options.restRequestVerb;\n\n            options.log(qq.format(\"Submitting GET SAS request for a {} REST request related to file ID {}.\", restVerb, id));\n\n            requestPromises[id] = requestPromise;\n\n            requester.initTransport(id)\n                .withParams({\n                    bloburi: blobUri,\n                    _method: restVerb\n                })\n                .withCacheBuster()\n                .send();\n\n            return requestPromise;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Delete Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179413.aspx.\n */\nqq.azure.DeleteBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"DELETE\",\n        options = {\n            endpointStore: {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhr, isError) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [202];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: options.endpointStore,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete\n    }));\n\n    qq.extend(this, {\n        method: method,\n        send: function(id) {\n            options.log(\"Submitting Delete Blob request for \" + id);\n\n            return requester.initTransport(id)\n                .send();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179451.aspx.\n */\nqq.azure.PutBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id),\n                headers = qq.azure.util.getParamsAsHeaders(params);\n\n            headers[\"x-ms-blob-type\"] = \"BlockBlob\";\n\n            return headers;\n        },\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success();\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, url, file) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting Put Blob request for \" + id);\n\n            promises[id] = promise;\n            endpoints[id] = url;\n\n            requester.initTransport(id)\n                .withPayload(file)\n                .withHeaders({\"Content-Type\": file.type})\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd135726.aspx.\n */\nqq.azure.PutBlock = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        blockIdEntries = {},\n        promises = {},\n        options = {\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id],\n                blockIdEntry = blockIdEntries[id];\n\n            delete endpoints[id];\n            delete promises[id];\n            delete blockIdEntries[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success(blockIdEntry);\n            }\n        }\n    }));\n\n    function createBlockId(partNum) {\n        var digits = 5,\n            zeros = new Array(digits + 1).join(\"0\"),\n            paddedPartNum = (zeros + partNum).slice(-digits);\n\n        return btoa(paddedPartNum);\n    }\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, sasUri, partNum, blob) {\n            var promise = new qq.Promise(),\n                blockId = createBlockId(partNum);\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block request for {} = part {}\", id, partNum));\n\n            endpoints[id] = qq.format(\"{}&comp=block&blockid={}\", sasUri, encodeURIComponent(blockId));\n            blockIdEntries[id] = {part: partNum, id: blockId};\n\n            requester.initTransport(id)\n                .withPayload(blob)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block List Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179467.aspx.\n */\nqq.azure.PutBlockList = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        promises = {},\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id);\n\n            return qq.azure.util.getParamsAsHeaders(params);\n        },\n        contentType: \"text/plain\",\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: function() {},\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n\n        }\n    }));\n\n    function createRequestBody(blockIdEntries) {\n        var doc = document.implementation.createDocument(null, \"BlockList\", null);\n\n        // If we don't sort the block ID entries by part number, the file will be combined incorrectly by Azure\n        blockIdEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(blockIdEntries, function(idx, blockIdEntry) {\n            var latestEl = doc.createElement(\"Latest\"),\n                latestTextEl = doc.createTextNode(blockIdEntry.id);\n\n            latestEl.appendChild(latestTextEl);\n            qq(doc).children()[0].appendChild(latestEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    qq.extend(this, {\n        method: method,\n        send: function(id, sasUri, blockIdEntries, fileMimeType, registerXhrCallback) {\n            var promise = new qq.Promise(),\n                blockIdsXml = createRequestBody(blockIdEntries),\n                xhr;\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block List request for {}\", id));\n\n            endpoints[id] = qq.format(\"{}&comp=blocklist\", sasUri);\n\n            xhr = requester.initTransport(id)\n                .withPayload(blockIdsXml)\n                .withHeaders({\"x-ms-blob-content-type\": fileMimeType})\n                .send();\n            registerXhrCallback(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (newStatus === qq.status.UPLOAD_RETRYING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to Azure.\n * This module inherits all logic from UI & core mode and adds some UI-related logic\n * specific to the upload-to-Azure workflow.  Some inherited options and API methods have a special meaning\n * in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from azure.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"azure\");\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.azure.FineUploader.prototype, qq.azure.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploader.prototype, {\n    });\n}());\n"]}